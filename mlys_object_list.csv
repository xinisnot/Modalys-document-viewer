name,category,modalysp,description,url
mlys.rect-membrane.mxo,objects,(make-object 'rect-membrane),"A simple and inexpensive mass and spring model that can serve as lips, among other things. The harmonic oscillator models a mass attached to a spring of a given stiffness, fixed at one end. The frequency of resonance of the object is given by the formula 1/(2 pi) sqrt(stiffness / mass).",https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_membrane_rect_fixed.html
mlys.closed-closed-tube.mxo,objects,(make-object 'closed-closed-tube),A model of a column of air in an acoustic tube (either cylindrical or conical) which is sealed at both ends.,https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_tube_closed_closed.html
mlys.melt-hybrid.mxo,objects,(make-object 'melt-hybrid),"Creates a hybrid of two different objects. One can think of this hybrid, as its name implies, as one object that melts into another. With it, one can make a string turn into a membrane, or have a tube tuned to 220Hz turn into a tube tuned to 440Hz. In both cases the result is like a glissando, as opposed to mix-hybrid which does not change the objects themselves, but rather the energy that is transmitted to the two components of the hybrid.",https://support.ircam.fr/docs/Modalys/current/Objects/ObjectHybrids/object_hybrid_melt.html
mlys.cello-bridge.mxo,objects,(make-object 'cello-bridge),A basic cello bridge model.,https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_bridge_cello.html
mlys.open-open-tube.mxo,objects,(make-object 'open-open-tube),A model of a column of air in an acoustic tube (either cylindrical or conical) which is open at both ends.,https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_tube_open_open.html
mlys.clamped-circ-plate.mxo,objects,(make-object 'clamped-circ-plate),A circular plate fixed at its edges.,https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_plate_circ_fixed.html
mlys.circ-membrane.mxo,objects,(make-object 'circ-membrane),"A circular membrane with zero thickness, fixed at its edged like a drum head.",https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_membrane_circ_fixed.html
mlys.tri-hybrid.mxo,objects,(make-object 'tri-hybrid),"Creates a tri-hybrid, which is essentially a mix-hybrid of three different objects. When exciting a tri-hybrid, energy is transmitted to the sub-objects in proportion to the values of the 2-dimensional controller. As with the mix-hybrid, when using a 'tri-hybrid with objects of three different pitches, one always hears the three distinct pitches.",https://support.ircam.fr/docs/Modalys/current/Objects/ObjectHybrids/object_hybrid_tri.html
mlys.single-point.mxo,objects,(make-object 'single-point),A Modalys object without physical properties which can nonetheless be represented in space and can vibrate in one dimension.,https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_point_single.html
mlys.jet.mxo,objects,(make-object 'jet),Simulates a wind jet created by a flue in a fipple. It can be used with the 'labium connection to create an oscillating air vortex that excites an air column in a tube to produce a recorder/flute model.,https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_jet.html
mlys.bi-two-mass.mxo,objects,(make-object 'bi-two-mass),"A simple bi-directional two-mass model that can serve as a hammer, plectrum, finger, etc. Generally the two-mass model has a small mass and a large mass; the small one will be ""connected"" to the object being excited, and the large one will be manipulated by the user. The two masses are connected by a spring. Visualize a large coin on a table, with a small coin on top, and a spring between them. The large coin can be moved in two directions ('trans0 and 'trans1), and the spring will cause the small coin to follow.",https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_mass_two_bi.html
mlys.mono-two-mass.mxo,objects,(make-object 'mono-two-mass),"A simple mono-directional two-mass model that can serve as a hammer, plectrum, finger, etc. Generally the two-mass model has a small mass and a large mass; the small one will be ""connected"" to the object being excited, and the large one will be manipulated by the user. This is similar to the bi-two-mass, except that it only vibrates in the trans0 direction. It is therefore more computationally efficient for single-direction interactions like plucking and striking objects.",https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_mass_two_mono.html
mlys.free-circ-plate.mxo,objects,(make-object 'free-circ-plate),A circular plate unattached at its edges.,https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_plate_circ_free.html
mlys.mix-hybrid.mxo,objects,(make-object 'mix-hybrid),"Creates a hybrid of two different objects. One can think of this hybrid more like a box with the two objects inside; in fact, it's sort of like a sound mix of the two objects, except that when exciting the hybrid, energy is transmitted to the sub-objects in proportion to the current position of the hybrid. When using a 'mix-hybrid with two objects of different pitches, one always hears the both distinct pitches (as opposed to the melt-hybrid, where you hear one varying pitch).",https://support.ircam.fr/docs/Modalys/current/Objects/ObjectHybrids/object_hybrid_mix.html
mlys.mono-string.mxo,objects,(make-object 'mono-string),"Any string or rod, fixed at its endpoints, that vibrates in one transverse (side-to-side) direction.",https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_string_mono.html
mlys.rect-plate.mxo,objects,(make-object 'rect-plate),A rectangular plate fixed at its edges.,https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_plate_rect_fixed.html
mlys.violin-bridge.mxo,objects,(make-object 'violin-bridge),A basic violin bridge model.,https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_bridge_violin.html
mlys.bi-string.mxo,objects,(make-object 'bi-string),"Any string or rod, fixed at its endpoints, that vibrates in two transverse directions (side-to-side, up-and-down). This is generally used for bowed interactions.",https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_string_bi.html
mlys.closed-open-tube.mxo,objects,(make-object 'closed-open-tube),A model of a column of air in an acoustic tube (either cylindrical or conical) which is sealed at one end and open at the other.,https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_tube_closed_open.html
mlys.read-from-file.mxo,objects,(make-object 'read-from-file),"Creates an object from modal data stored in a file. This could be using modal data saved with the Modalys (save-object ...) function, or to retrieve a modal data file produced by some other source, such as an analysis or another program.",https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_file_read.html
mlys.harmonic-oscillator.mxo,objects,(make-object 'harmonic-oscillator),"A simple and inexpensive mass and spring model that can serve as lips, among other things. The harmonic oscillator models a mass attached to a spring of a given stiffness, fixed at one end. The frequency of resonance of the object is given by the formula 1/(2 pi) sqrt(stiffness / mass).",https://support.ircam.fr/docs/Modalys/current/Objects/ObjectReference/object_mass_one_mono.html
mlys.mono-fingerboard.mxo,connections,mono-(make-connection 'fingerboard),Simulates the interaction between a finger and a string with a fingerboard underneath them (mono-directional version).,https://support.ircam.fr/docs/Modalys/current/Connections/connection_fingerboard_mono.html
mlys.bow.mxo,connections,(make-connection 'bow),Two-dimensional bowed connection between four accesses.,https://support.ircam.fr/docs/Modalys/current/Connections/connection_bow.html
mlys.valve.mxo,connections,(make-connection 'valve),"This connection simulates the behavior of a valve. It can be used as well to imitate vibrating lips. Note that you can make it with one or two accesses, plus one for the object playing the role of the tube.",https://support.ircam.fr/docs/Modalys/current/Connections/connection_valve.html
mlys.spring.mxo,connections,(make-connection 'spring),This connection allows the energy from one object to be transferred to another via a spring which acts as a harmonic oscillator.,https://support.ircam.fr/docs/Modalys/current/Connections/connection_spring.html
mlys.adhere.mxo,connections,(make-connection 'adhere),"Adheres two accesses together, so they have the same speed.",https://support.ircam.fr/docs/Modalys/current/Connections/connection_adhere.html
mlys.reed.mxo,connections,(make-connection 'reed),Makes a reed-tube interaction.,https://support.ircam.fr/docs/Modalys/current/Connections/connection_reed.html
mlys.strike.mxo,connections,(make-connection 'strike),A connection where one access strikes another.,https://support.ircam.fr/docs/Modalys/current/Connections/connection_strike.html
mlys.hole.mxo,connections,(make-connection 'hole),Makes a tone hole of variable diameter along an acoustic tube. This function has been deprecated (see details below).,https://support.ircam.fr/docs/Modalys/current/Connections/connection_hole.html
mlys.position.mxo,connections,(make-connection 'position),Sets the position of an access.,https://support.ircam.fr/docs/Modalys/current/Connections/connection_position.html
mlys.felt.mxo,connections,(make-connection 'felt),"Interaction of a felt hammer against an object. It is very convenient in order to soften the excessively brutal attacks inherent in the strike connection. It fully models the hysteresis (the lag time of the effect of the interaction in relation to its cause), just as real felt behaves, and is based on Stulov's model.",https://support.ircam.fr/docs/Modalys/current/Connections/connection_felt.html
mlys.force.mxo,connections,(make-connection 'force),Applies force to an access.,https://support.ircam.fr/docs/Modalys/current/Connections/connection_force.html
mlys.labium.mxo,connections,(make-connection 'labium),"This connection simulates the action of a jet against a labium in a fipple, creating an air vortex. (Seriously, those are the correct terms, not typos!!)",https://support.ircam.fr/docs/Modalys/current/Connections/connection_labium.html
mlys.pluck.mxo,connections,(make-connection 'pluck),A connection where one access plucks another.,https://support.ircam.fr/docs/Modalys/current/Connections/connection_pluck.html
mlys.speed.mxo,connections,(make-connection 'speed),Specifies (sets) the speed of an access over time.,https://support.ircam.fr/docs/Modalys/current/Connections/connection_speed.html
mlys.normalised-valve.mxo,connections,normalised-valve,"This connection simulates the behavior of a reed or valve. The normalised valve connection has fewer arguments than the valve connection, and is much more intuitive and easier to use. This is made possible because there is a reference force, that of the complete block of the reed on the mouthpiece, to which one can normalise all force.",https://support.ircam.fr/docs/Modalys/current/Connections/connection_valve_normalised.html
mlys.point-input.mxo,input-output,(make-point-input),Creates an audio input to be used with a signal controller.,https://support.ircam.fr/docs/Modalys/current/Workspace/workspace_point_input.html
mlys.point-output.mxo,input-output,(make-point-output),Creates an audio output from the speed of an access or directly from the value of a controller.,https://support.ircam.fr/docs/Modalys/current/Workspace/workspace_point_output.html
mlys.signal.mxo,controllers,(make-controller 'signal),A controller derived from real-time signal input.,https://support.ircam.fr/docs/Modalys/current/Controllers/controller_signal.html
mlys.lua.mxo,controllers,,"mlys.lua, available in Modalys for Max environment only, is a controller that lets you write pieces of Lua script for static instrument construction (including 3D finite elements) or also real time control. Lua scripts are compiled on-the-fly with C language execution speed. The aim of mlys.lua is to provide as much flexibility as ModaLisp within Max' real time environment, for instance for finite elements. This section is still under construction and will be improved over time. Many examples can be found in the Modalys for Max package.",https://support.ircam.fr/docs/Modalys/current/Controllers/controller_lua.html
mlys.dynamic.mxo,controllers,(make-controller 'dynamic),"A controller whose value can be dynamically changed. In Modalys for Max environment, the value can be changed using messages (sent to modalys\~). In Lisp, it can be changed between (run) statements at the whim of the user (or a foreign-call controller!), using (send-message ... ) or (set-breakpoint ... ) to create a ramp to a given value over a certain amount of time.",https://support.ircam.fr/docs/Modalys/current/Controllers/controller_dynamic.html
mlys.arithmetic.mxo,controllers,(make-controller 'arithmetic),"Controller whose output combines two or more input controllers using one of the four basic arithmetic operations (+, -, *, /). Dimension of the input controllers is limited to 1.",https://support.ircam.fr/docs/Modalys/current/Controllers/controller_arithmetic.html
mlys.spread.mxo,controllers,(make-controller 'spread),Outputs in all dimensions the value received by a one dimensional channel input controller.,https://support.ircam.fr/docs/Modalys/current/Controllers/controller_dimension_spread.html
mlys.access-speed.mxo,controllers,(make-controller 'access-speed),This is a controller which outputs the speed of vibration of a given access.,https://support.ircam.fr/docs/Modalys/current/Controllers/controller_access_speed.html
mlys.sine.mxo,controllers,(make-controller 'sine),Outputs a sine-wave in each dimension.,https://support.ircam.fr/docs/Modalys/current/Controllers/controller_sine.html
mlys.access-force.mxo,controllers,(make-controller 'access-force),This is a controller which outputs the interaction force of a connection at an access.,https://support.ircam.fr/docs/Modalys/current/Controllers/controller_access_force.html
mlys.expression.mxo,controllers,(make-controller 'expression),Controller whose output combines one or more input controllers using a simple C-language-like expression provided as a string.,https://support.ircam.fr/docs/Modalys/current/Controllers/controller_expression.html
mlys.scale.mxo,controllers,(make-controller 'scale),This is a controller which takes a controller as input and scales it from one range to another.,https://support.ircam.fr/docs/Modalys/current/Controllers/controller_scale.html
mlys.access-position.mxo,controllers,(make-controller 'access-position),This is a controller which outputs the position of a given access.,https://support.ircam.fr/docs/Modalys/current/Controllers/controller_access_position.html
mlys.phasor.mxo,controllers,,,
mlys.collector.mxo,kernel,,,
mlys.script.mxo,kernel,,,
modalys~.mxo,kernel,,,